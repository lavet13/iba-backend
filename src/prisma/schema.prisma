// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserRole {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @default(USER)

  @@unique([userId, role])
  @@map("user_roles")
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  RefreshToken RefreshToken[]
  roles        UserRole[]

  @@map("users")
}

enum Role {
  ADMIN
  MANAGER
  USER
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@map("refresh_tokens")
}

model WbOrder {
  id        BigInt      @id @default(autoincrement())
  name      String
  phone     String
  qrCode    String?     @unique
  orderCode String?
  wbPhone   String?
  status    OrderStatus @default(NOT_ASSEMBLED)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([qrCode, wbPhone])
}

enum OrderStatus {
  NOT_ASSEMBLED @map("1")
  ASSEMBLED     @map("2")
  REJECTED      @map("3")
}
